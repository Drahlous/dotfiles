- name: Bootstrap dotfiles
  hosts: localhost

  tasks:
    - name: Install Packages
      become: yes
      apt:
        name:
          "{{ packages }}"
        state: present
      when: ansible_distribution == "Ubuntu"
      # If you see the following error:
      # "python3-apt must be installed and visible from /usr/bin/python3"
      # Then you may have multiple versions of python installed.
      #
      # This error shows up when the 'python3-apt' package version
      # is not compatible with the default 'python3' version.
      #
      # Solution:
      # Uncomment the variable definition below and
      # specify the latest python3 interpreter
      #
      # vars:
      #   ansible_python_interpreter: /usr/bin/python3.10

    - name: Get UTF-8 Locale
      become: yes
      community.general.locale_gen:
        name: en_US.UTF-8

    - name: Link fd find
      ansible.builtin.file:
        path: "{{ local_bin }}/fd"
        src: /usr/bin/fdfind
        state: link

    - name: Create Fonts Directory
      ansible.builtin.file:
        path: ~/.local/share/fonts
        state: directory

    - name: Install FiraCode Nerd Font
      ansible.builtin.shell:
        cmd: curl -fLO https://github.com/ryanoasis/nerd-fonts/raw/HEAD/patched-fonts/FiraCode/Regular/FiraCodeNerdFontMono-Regular.ttf
      args:
        chdir: ~/.local/share/fonts
        creates: ~/.local/share/fonts/FiraCodeNerdFontMono-Regular.ttf

    - name: Update clangd to use clangd-12
      become: yes
      community.general.alternatives:
        name: clangd
        link: /usr/bin/clangd
        path: /usr/bin/clangd-12
        state: selected

    - name: Install oh-my-zsh
      ansible.builtin.shell: echo "n" | sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
      args:
        creates: ~/.oh-my-zsh

    - name: Install Vim Plug
      ansible.builtin.shell:
        cmd :| 
          curl -fLo "${XDG_DATA_HOME:-$HOME/.local/share}"/nvim/site/autoload/plug.vim --create-dirs \
           https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
      args:
        creates: $HOME/.local/share/nvim/site/autoload/plug.vim

    - name: Install Neovim AppImage
      ansible.builtin.get_url:
        url: https://github.com/neovim/neovim/releases/download/stable/nvim.appimage
        dest: "{{ local_bin }}/nvim"
        mode: '0760'

    - name: Link Neovim Config
      ansible.builtin.file:
        path: ~/.config/nvim
        src: "{{ dotfiles_dir }}/config/nvim"
        state: link

    - name: Install Neovim Plugins
      ansible.builtin.shell:
        cmd: "{{ local_bin }}/nvim --headless +PlugInstall +qall"

    - name: Install pynvim
      ansible.builtin.pip:
        name: pynvim

    - name: Install Python Linters and Formatters
      ansible.builtin.pip:
        name:
          - pydocstyle
          - pylint
          - black
          - isort

    - name: Link bashrc
      ansible.builtin.file:
        src: "{{ dotfiles_dir }}/bashrc"
        path: ~/.bashrc
        state: link
        force: true

    - name: Create VSCode config directory
      ansible.builtin.file:
        path: ~/.config/Code/User
        state: directory

    - name: Link VSCode config
      ansible.builtin.file:
        src: "{{ dotfiles_dir }}/config/Code/User/settings.json"
        path: ~/.config/Code/User/settings.json
        state: link
        force: true

    - name: Link fuz script
      ansible.builtin.file:
        src: "{{ dotfiles_dir }}/scripts/fuz.sh"
        path: "{{ local_bin }}/fuz"
        state: link
        force: true

  vars:
    dotfiles_dir: ~/dotfiles
    local_bin: ~/.local/bin
    packages:
      # General Dependencies
      - libfuse2
      - locales
      - stow
      - git
      - ca-certificates
      - gnupg
      - lsb-release
      - curl
      - lua5.3
      - snapd
      - cmake
      - python3
      - python3-pip
      # C++ Essentials
      - build-essential
      - gcc
      - g++
      - gdb
      - clang
      - libstdc++-12-dev
      - bear
      # Terminal and Shell
      - tmux
      - zsh
      - zsh-syntax-highlighting
      - fonts-powerline
      - fonts-hack-ttf
      - ripgrep
      - fd-find
      - fzf
      - xsel
      - clangd-12
      - exuberant-ctags
      - shellcheck
